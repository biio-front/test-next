import { GetStaticProps, InferGetStaticPropsType, NextPage } from 'next';
import axios from 'axios';

import { Form, Button, Spinner } from 'react-bootstrap';
import Head from 'next/head';

import Footer from '../../components/Footer';

import { useGetPokemon } from '../../query/pokemon';
import useInput from '../../hooks/useInput';

import styles from '../../styles/Home.module.css';

const StaticProps: NextPage = ({ pokemon }: InferGetStaticPropsType<typeof getStaticProps>) => {
  const input = useInput('');

  const { mutate, data, isLoading } = useGetPokemon();
  const onSubmit = () => mutate({ search: input.value });

  const pokemonImage = (data || pokemon)?.sprites.front_shiny || '';
  const pokemonName = (data || pokemon)?.species.name || '';

  return (
    <div>
      <Head>
        <title>{pokemonName}</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <h2>This page is used by getStaticProps 😊</h2>

        <p className={styles.description}>
          This is page in
          <code className={styles.code}>pages/static/props.tsx</code>
        </p>

        <p>
          If you export an async function called getStaticProps from a page,
          <br />
          Next.js will pre-render this page at build time using the props returned by
          getStaticProps.
        </p>

        <Form
          className={styles.form}
          onSubmit={(event: React.FormEvent) => {
            event.preventDefault();
            onSubmit();
          }}
        >
          <Form.Control
            value={input.value}
            onChange={input.onChange}
            placeholder='숫자를 입력해주세요.'
            type='number'
          />
          <Button type='submit'>찾아보기</Button>
        </Form>

        {isLoading ? (
          <Spinner animation='border' />
        ) : (
          pokemonImage && <img src={pokemonImage} alt={pokemonName} />
        )}
      </main>

      <Footer />
    </div>
  );
};

export const getStaticProps: GetStaticProps = async () => {
  const pokemon = await axios.get('https://pokeapi.co/api/v2/pokemon/pikachu');

  if (!pokemon) {
    return {
      notFound: true,
    };
  }

  return { props: { pokemon: { sprites: pokemon.data.sprites, species: pokemon.data.species } } };
};

export default StaticProps;
